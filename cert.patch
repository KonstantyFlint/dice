# Konstanty Krzemie≈Ñ, Maciej Kucharski
From e65ef281e5bb46b7e14e8c0695f5a5947df85d1a Mon Sep 17 00:00:00 2001
From: KonstantyFlint <43811569+KonstantyFlint@users.noreply.github.com>
Date: Tue, 23 Nov 2021 23:13:38 +0100
Subject: [PATCH] fixes

---
 dice.cpp | 42 +++++++++++++++++++++++++++++++++---------
 1 file changed, 33 insertions(+), 9 deletions(-)

diff --git a/dice.cpp b/dice.cpp
index 08feee9..d785be5 100644
--- a/dice.cpp
+++ b/dice.cpp
@@ -1,17 +1,32 @@
 #include <iostream>
 #include <cstdlib>
 #include <string>
+#include <random>
+#include <stdexcept>
 
-int roll(int min, int max){
-	return rand() % (max - min + 1) + min;
+int roll(int min, int max){		//do not use rand()
+	std::mt19937 device;
+	std::uniform_int_distribution<int> distribution(min,max);
+	return distribution(device);
 }
 
-double calculate_average(int min, int max, int sample_size){
-	int sum = 0;
+bool addition_overflow(int a, int b){
+	return (((b > 0) && (a > (INT_MAX - b))) || ((b < 0) && (a < (INT_MIN - b))));
+}
+
+double calculate_average(int min, int max, int sample_size){	
+	int sum = 0;												
 	for(int i=0;i<sample_size;i++){
-		sum += roll(min,max);
+		int r = roll(min,max);
+		if(addition_overflow(sum, r)){	//check for integer overflow and underflow
+			std::cout<<"testing on full sample size would have caused int overflow / underflow, shrinking sample size to "<< i<<"\n";
+			sample_size = i;
+			break;
+		}else{
+			sum += roll(min,max);
+		}
 	}
-	return sum / (float) sample_size;
+	return sum / (double) sample_size;
 }
 
 int main(int argc, char ** args){
@@ -19,8 +34,17 @@ int main(int argc, char ** args){
 		std::cout<<"wrong number of arguments\n";
 		return -1;
 	}
-	int min = std::stoi(args[1]);
-	int max = std::stoi(args[2]);
-	int sample_size = std::stoi(args[3]);
+	int min,max,sample_size;
+	try{	//check for string to int conversion errors
+		min = std::stoi(args[1]);								
+		max = std::stoi(args[2]);
+		sample_size = std::stoi(args[3]);
+	}catch(std::invalid_argument e){
+		std::cout<<"all three arguments need to be integers\n";
+		return -2;
+	}
+	
+	if(max < min)std::swap(min,max);
+	
 	std::cout<<calculate_average(min,max,sample_size);
 }
